user www www;
worker_processes auto;

error_log /data/wwwlogs/error_nginx.log crit;
pid /var/run/nginx.pid;
worker_rlimit_nofile 51200;

events {
  use epoll;
  worker_connections 51200;
  multi_accept on;
}

http {
  include mime.types;
  default_type application/octet-stream;
  server_names_hash_bucket_size 128;
  client_header_buffer_size 32k;
  large_client_header_buffers 4 32k;
  client_max_body_size 1024m;
  client_body_buffer_size 10m;
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 120;
  server_tokens off;
  tcp_nodelay on;

  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;
  fastcgi_buffer_size 64k;
  fastcgi_buffers 4 64k;
  fastcgi_busy_buffers_size 128k;
  fastcgi_temp_file_write_size 128k;
  fastcgi_intercept_errors on;

  ## Gzip Compression
  gzip on;
  gzip_buffers 16 8k;
  gzip_comp_level 6;
  gzip_http_version 1.1;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
    text/javascript application/javascript application/x-javascript
    text/x-json application/json application/x-web-app-manifest+json
    text/css text/plain text/x-component
    font/opentype application/x-font-ttf application/vnd.ms-fontobject
    image/x-icon;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  ## Brotli Compression
  # brotli on;
  # brotli_comp_level 6;
  # brotli_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;

  ## If you have a lot of static files to serve through Nginx then caching of the files' metadata (not the actual files' contents) can save some latency.
  # open_file_cache max=1000 inactive=20s;
  # open_file_cache_valid 30s;
  # open_file_cache_min_uses 2;
  # open_file_cache_errors on;

######################## default ############################
  # https重定向
  server {
    listen 80;
    server_name wjghj.cn www.wjghj.cn;
    return 301 https://www.epb.wiki$request_uri;
  }
  server {
    listen 443 ssl http2;
    include module/ssl_common.conf;
    server_name wjghj.cn www.wjghj.cn;
    ssl_certificate cert/1_epb.wiki_cf.crt;
    ssl_certificate_key cert/2_epb.wiki_cf.key;
    return 301 https://wiki.epb.wiki$request_uri;
  }
  server {
    listen 80;
    server_name wiki.epb.wiki;
    return 301 https://wiki.epb.wiki$request_uri;
  }
  server {
    listen 80;
    server_name cloud.epb.wiki cloud.wjghj.cn;
    return 301 https://cloud.epb.wiki$request_uri;
  }
  server {
    listen 80;
    server_name common.epb.wiki common.wjghj.cn;
    return 301 https://common.epb.wiki$request_uri;
  }
  server {
    listen 80;
    server_name forum.epb.wiki forum.wjghj.cn;
    return 301 https://forum.epb.wiki$request_uri;
  }
  server {
    listen 80;
    server_name img.epb.wiki img.wjghj.cn;
    return 301 https://img.epb.wiki$request_uri;
  }
  server {
    listen 80;
    server_name page.epb.wiki page.wjghj.cn;
    return 301 https://page.epb.wiki$request_uri;
  }
  server {
    listen 80;
    server_name matomo.epb.wiki;
    return 301 https://matomo.epb.wiki$request_uri;
  }
  server {
    listen 80;
    server_name blog.ngnl.wiki www.ngnlwiki.cn ngnlwiki.cn;
    return 301 https://blog.ngnl.wiki$request_uri;
  }

  # test
  server {
    listen 80;
    server_name test.epb.wiki;
    root /data/wwwroot/epb.wiki/test;
    index index.html index.htm;
    error_page 404 /404.html;
  }
  server {
    listen 443 ssl http2;
    server_name test.epb.wiki;
    root /data/wwwroot/epb.wiki/test;
    index index.html index.htm;
    error_page 404 /404.html;
    include module/ssl_common.conf;
  }

  # wiki主站台(@/www)配置
  server {
    listen 443 ssl http2;
    server_name wiki.epb.wiki;
    access_log /data/wwwlogs/access_nginx_wiki.epb.wiki.log combined;
    root /data/wwwroot/epb.wiki/mediawiki;
    index index.html index.htm index.php;

    include module/ssl_common.conf;
    include site/mediawiki.conf;
    include site/wiki.epb.wiki.conf;
    include module/route.conf;
  }

  # cloudreve (cloud)配置
  server {
    listen 443 ssl http2;
    server_name cloud.wjghj.cn cloud.epb.wiki;
    access_log /data/wwwlogs/access_nginx_cloud.epb.wiki.log combined;

    include module/ssl_common.conf;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://127.0.0.1:5212;

      # 如果您要使用本地存储策略，请将下一行注释符删除，并更改大小为理论最大文件尺寸
      # client_max_body_size 20000m;
    }
  }

  # commin wiki (common)配置
  server {
    listen 443 ssl http2;
    server_name common.wjghj.cn common.epb.wiki;
    access_log /data/wwwlogs/access_nginx_common.epb.wiki.log combined;
    root /data/wwwroot/epb.wiki/mediawiki;
    index index.html index.htm index.php;

    include module/ssl_common.conf;
    include site/mediawiki.conf;
    include site/common.epb.wiki.conf;
    include module/route.conf;
  }

  # Doc Center (doc)配置
  server {
    listen 443 ssl http2;
    server_name doc.wjghj.cn;
    access_log on;
    root /data/wwwroot/wjghj.cn/doc;
    index index.php index.html index.htm;

    include module/ssl_common.conf;
    include module/route.conf;
    include module/php.conf;
  }

  # Forum (forum)配置
  server {
    listen 443 ssl http2;
    server_name forum.wjghj.cn forum.epb.wiki;
    access_log on;
    root /data/wwwroot/epb.wiki/flarum/public;
    index index.php index.html index.htm;

    include module/ssl_common.conf;
    include module/route.conf;
    include module/php.conf;
    include /data/wwwroot/epb.wiki/flarum/.nginx.conf;
  }

  # Chevereto (img)配置
  server {
    listen 443 ssl http2;
    server_name img.wjghj.cn img.epb.wiki;
    access_log /data/wwwlogs/access_img.epb.wiki.log combined;
    root /data/wwwroot/epb.wiki/CheveretoNulled/chevereto;
    index index.php index.html index.htm;

    # Deny
    error_page 403 /_admin/public/403.html;
    location ~ ^/app.*?\.(po|php|lock|sql)$ {
      deny all;
    }
    location ~ ^/content.*?\.(po|php|lock|sql)$ {
      deny all;
    }

    include module/ssl_common.conf;
    include module/route.conf;
    include module/php.conf;
  }

  # Pagekit (page)配置
  server {
    listen 443 ssl http2;
    server_name page.wjghj.cn page.epb.wiki;
    access_log /data/wwwlogs/access_page.epb.wiki.log combined;
    root /data/wwwroot/epb.wiki/page;
    index index.php index.html index.htm;

    include module/ssl_common.conf;
    include module/route.conf;
    include module/php.conf;
  }

  # Matomo 配置
  server {
    listen 443 ssl http2;
    server_name matomo.epb.wiki;
    access_log on;
    access_log /data/wwwlogs/access_matomo.epb.wiki.log combined;
    root /data/wwwroot/epb.wiki/matomo;
    index index.php index.html index.htm;

    include module/ssl_common.conf;
    include module/route.conf;
    include module/php.conf;
  }

  # blog.ngnlwiki.cn (NGNL Wiki Project Team)
  server {
    listen 443 ssl http2;
    server_name blog.ngnl.wiki www.ngnlwiki.cn ngnlwiki.cn;
    access_log on;
    access_log /data/wwwlogs/access_nginx_www.ngnlwiki.cn.log combined;
    root /data/wwwroot/ngnlwiki.cn/www;
    index index.html index.htm index.php;

    include module/ssl_common.conf;
    include module/php.conf;
    include module/route.conf;
  }

########################## vhost #############################
  include vhost/*.conf;
}
